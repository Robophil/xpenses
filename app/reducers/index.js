"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var store_1 = require("@ngrx/store");
var store_2 = require("@ngrx/store");
var core_1 = require("@ngrx/core");
var Cycles = require("./cycles");
var Categories = require("./categories");
var environment_1 = require("../environments/environment");
exports.reducers = {
    test: function () {
        return { a: 'hey' + Math.floor(Math.random() * 1000) };
    },
    cycles: Cycles.cycles,
    categories: Categories.categories,
};
;
var prod = store_2.combineReducers(exports.reducers);
var dev = core_1.compose(store_2.combineReducers)(exports.reducers);
function redux(state, action) {
    return environment_1.environment.production ? prod(state, action) : dev(state, action);
}
exports.redux = redux;
exports.STORE = [
    store_1.StoreModule.provideStore(redux),
];
// Selectors
function getCycles() {
    return function (state$) { return state$.select(function (s) { return s.cycles; }); };
}
exports.getCycles = getCycles;
function getCyclesIds() {
    return core_1.compose(Cycles.getIds(), getCycles());
}
exports.getCyclesIds = getCyclesIds;
function getCyclesSelectedId() {
    return core_1.compose(Cycles.getSelectedId(), getCycles());
}
exports.getCyclesSelectedId = getCyclesSelectedId;
function getCyclesSelectedDate() {
    return core_1.compose(Cycles.getSelectedDate(), getCycles());
}
exports.getCyclesSelectedDate = getCyclesSelectedDate;
function getCyclesDataRaw() {
    return function (state$) { return state$.select(function (s) { return s.cycles.data; }); };
}
exports.getCyclesDataRaw = getCyclesDataRaw;
function getCyclesData() {
    return function (state$) { return state$
        .let(getCyclesIds())
        .switchMap(function (ids) { return state$.let(core_1.compose(Cycles.getData(ids), getCycles())); }); };
}
exports.getCyclesData = getCyclesData;
function getCategories() {
    return function (state$) { return state$.select(function (s) { return s.categories; }); };
}
exports.getCategories = getCategories;
function getCategoriesIds() {
    return core_1.compose(Categories.getIds(), getCategories());
}
exports.getCategoriesIds = getCategoriesIds;
function getCategoriesSelectedId() {
    return core_1.compose(Categories.getSelectedId(), getCategories());
}
exports.getCategoriesSelectedId = getCategoriesSelectedId;
function getCategoriesSelectedDate() {
    return core_1.compose(Categories.getSelectedDate(), getCategories());
}
exports.getCategoriesSelectedDate = getCategoriesSelectedDate;
function getCategoriesDataRaw() {
    return function (state$) { return state$.select(function (s) { return s.categories.data; }); };
}
exports.getCategoriesDataRaw = getCategoriesDataRaw;
function getCategoriesData() {
    return function (state$) { return state$
        .let(getCategoriesIds())
        .switchMap(function (ids) { return state$.let(core_1.compose(Categories.getData(ids), getCategories())); }); };
}
exports.getCategoriesData = getCategoriesData;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFDQUE4RDtBQUk5RCxxQ0FBOEM7QUFDOUMsbUNBQXFDO0FBQ3JDLGlDQUFtQztBQUNuQyx5Q0FBMkM7QUFDM0MsMkRBQTBEO0FBRTdDLFFBQUEsUUFBUSxHQUFHO0lBQ3RCLElBQUksRUFBRTtRQUNKLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxLQUFLLEdBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQTtJQUNwRCxDQUFDO0lBQ0QsTUFBTSxFQUFFLE1BQU0sQ0FBQyxNQUFNO0lBQ3JCLFVBQVUsRUFBRSxVQUFVLENBQUMsVUFBVTtDQUNsQyxDQUFDO0FBTUQsQ0FBQztBQUVGLElBQU0sSUFBSSxHQUFHLHVCQUFlLENBQUMsZ0JBQVEsQ0FBQyxDQUFDO0FBQ3ZDLElBQU0sR0FBRyxHQUFHLGNBQU8sQ0FBQyx1QkFBZSxDQUFDLENBQUMsZ0JBQVEsQ0FBQyxDQUFDO0FBQy9DLGVBQXNCLEtBQVUsRUFBRSxNQUFXO0lBQzNDLE1BQU0sQ0FBQyx5QkFBVyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxHQUFHLEdBQUcsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDM0UsQ0FBQztBQUZELHNCQUVDO0FBRVksUUFBQSxLQUFLLEdBQUc7SUFDbkIsbUJBQVcsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDO0NBQ2hDLENBQUM7QUFFRixZQUFZO0FBQ1o7SUFDRSxNQUFNLENBQUMsVUFBQyxNQUFtQixJQUFLLE9BQUEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxNQUFNLEVBQVIsQ0FBUSxDQUFDLEVBQTVCLENBQTRCLENBQUM7QUFDL0QsQ0FBQztBQUZELDhCQUVDO0FBQ0Q7SUFDRSxNQUFNLENBQUMsY0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFGRCxvQ0FFQztBQUNEO0lBQ0UsTUFBTSxDQUFDLGNBQU8sQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztBQUN0RCxDQUFDO0FBRkQsa0RBRUM7QUFDRDtJQUNFLE1BQU0sQ0FBQyxjQUFPLENBQUMsTUFBTSxDQUFDLGVBQWUsRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7QUFDeEQsQ0FBQztBQUZELHNEQUVDO0FBQ0Q7SUFDRSxNQUFNLENBQUMsVUFBQyxNQUFtQixJQUFLLE9BQUEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFiLENBQWEsQ0FBQyxFQUFqQyxDQUFpQyxDQUFDO0FBQ3BFLENBQUM7QUFGRCw0Q0FFQztBQUNEO0lBQ0UsTUFBTSxDQUFDLFVBQUMsTUFBbUIsSUFBSyxPQUFBLE1BQU07U0FDbkMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ25CLFNBQVMsQ0FBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxFQUFyRCxDQUFxRCxDQUFDLEVBRjFDLENBRTBDLENBQUM7QUFDN0UsQ0FBQztBQUpELHNDQUlDO0FBQ0Q7SUFDRSxNQUFNLENBQUMsVUFBQyxNQUFtQixJQUFLLE9BQUEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxVQUFVLEVBQVosQ0FBWSxDQUFDLEVBQWhDLENBQWdDLENBQUM7QUFDbkUsQ0FBQztBQUZELHNDQUVDO0FBQ0Q7SUFDRSxNQUFNLENBQUMsY0FBTyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsRUFBRSxhQUFhLEVBQUUsQ0FBQyxDQUFDO0FBQ3ZELENBQUM7QUFGRCw0Q0FFQztBQUNEO0lBQ0UsTUFBTSxDQUFDLGNBQU8sQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLEVBQUUsYUFBYSxFQUFFLENBQUMsQ0FBQztBQUM5RCxDQUFDO0FBRkQsMERBRUM7QUFDRDtJQUNFLE1BQU0sQ0FBQyxjQUFPLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxFQUFFLGFBQWEsRUFBRSxDQUFDLENBQUM7QUFDaEUsQ0FBQztBQUZELDhEQUVDO0FBQ0Q7SUFDRSxNQUFNLENBQUMsVUFBQyxNQUFtQixJQUFLLE9BQUEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFqQixDQUFpQixDQUFDLEVBQXJDLENBQXFDLENBQUM7QUFDeEUsQ0FBQztBQUZELG9EQUVDO0FBQ0Q7SUFDRSxNQUFNLENBQUMsVUFBQyxNQUFtQixJQUFLLE9BQUEsTUFBTTtTQUNuQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztTQUN2QixTQUFTLENBQUMsVUFBQSxHQUFHLElBQUksT0FBQSxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQU8sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLGFBQWEsRUFBRSxDQUFDLENBQUMsRUFBN0QsQ0FBNkQsQ0FBQyxFQUZsRCxDQUVrRCxDQUFDO0FBQ3JGLENBQUM7QUFKRCw4Q0FJQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0b3JlIGFzIFMsIFN0b3JlTW9kdWxlLCBBY3Rpb24gfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBTdG9yZURldnRvb2xzTW9kdWxlIH0gZnJvbSAnQG5ncngvc3RvcmUtZGV2dG9vbHMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5cbmltcG9ydCB7IGNvbWJpbmVSZWR1Y2VycyB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IGNvbXBvc2UgfSBmcm9tICdAbmdyeC9jb3JlJztcbmltcG9ydCAqIGFzIEN5Y2xlcyBmcm9tICcuL2N5Y2xlcyc7XG5pbXBvcnQgKiBhcyBDYXRlZ29yaWVzIGZyb20gJy4vY2F0ZWdvcmllcyc7XG5pbXBvcnQgeyBlbnZpcm9ubWVudCB9IGZyb20gJy4uL2Vudmlyb25tZW50cy9lbnZpcm9ubWVudCc7XG5cbmV4cG9ydCBjb25zdCByZWR1Y2VycyA9IHtcbiAgdGVzdDogKCkgPT4ge1xuICAgIHJldHVybiB7IGE6ICdoZXknK01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxMDAwKSB9XG4gIH0sXG4gIGN5Y2xlczogQ3ljbGVzLmN5Y2xlcyxcbiAgY2F0ZWdvcmllczogQ2F0ZWdvcmllcy5jYXRlZ29yaWVzLFxufTtcblxuZXhwb3J0IGludGVyZmFjZSBBcHBTdGF0ZSB7XG4gIHRlc3Q6IE9iamVjdDtcbiAgY3ljbGVzOiBDeWNsZXMuQ3ljbGVzU3RhdGU7XG4gIGNhdGVnb3JpZXM6IENhdGVnb3JpZXMuQ2F0ZWdvcmllc1N0YXRlLFxufTtcblxuY29uc3QgcHJvZCA9IGNvbWJpbmVSZWR1Y2VycyhyZWR1Y2Vycyk7XG5jb25zdCBkZXYgPSBjb21wb3NlKGNvbWJpbmVSZWR1Y2VycykocmVkdWNlcnMpO1xuZXhwb3J0IGZ1bmN0aW9uIHJlZHV4KHN0YXRlOiBhbnksIGFjdGlvbjogYW55KSB7XG4gIHJldHVybiBlbnZpcm9ubWVudC5wcm9kdWN0aW9uID8gcHJvZChzdGF0ZSwgYWN0aW9uKSA6IGRldihzdGF0ZSwgYWN0aW9uKTtcbn1cblxuZXhwb3J0IGNvbnN0IFNUT1JFID0gW1xuICBTdG9yZU1vZHVsZS5wcm92aWRlU3RvcmUocmVkdXgpLFxuXTtcblxuLy8gU2VsZWN0b3JzXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q3ljbGVzKCkge1xuICByZXR1cm4gKHN0YXRlJDogUzxBcHBTdGF0ZT4pID0+IHN0YXRlJC5zZWxlY3QocyA9PiBzLmN5Y2xlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0Q3ljbGVzSWRzKCkge1xuICByZXR1cm4gY29tcG9zZShDeWNsZXMuZ2V0SWRzKCksIGdldEN5Y2xlcygpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRDeWNsZXNTZWxlY3RlZElkKCkge1xuICByZXR1cm4gY29tcG9zZShDeWNsZXMuZ2V0U2VsZWN0ZWRJZCgpLCBnZXRDeWNsZXMoKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0Q3ljbGVzU2VsZWN0ZWREYXRlKCkge1xuICByZXR1cm4gY29tcG9zZShDeWNsZXMuZ2V0U2VsZWN0ZWREYXRlKCksIGdldEN5Y2xlcygpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRDeWNsZXNEYXRhUmF3KCkge1xuICByZXR1cm4gKHN0YXRlJDogUzxBcHBTdGF0ZT4pID0+IHN0YXRlJC5zZWxlY3QocyA9PiBzLmN5Y2xlcy5kYXRhKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRDeWNsZXNEYXRhKCkge1xuICByZXR1cm4gKHN0YXRlJDogUzxBcHBTdGF0ZT4pID0+IHN0YXRlJFxuICAgIC5sZXQoZ2V0Q3ljbGVzSWRzKCkpXG4gICAgLnN3aXRjaE1hcChpZHMgPT4gc3RhdGUkLmxldChjb21wb3NlKEN5Y2xlcy5nZXREYXRhKGlkcyksIGdldEN5Y2xlcygpKSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldENhdGVnb3JpZXMoKSB7XG4gIHJldHVybiAoc3RhdGUkOiBTPEFwcFN0YXRlPikgPT4gc3RhdGUkLnNlbGVjdChzID0+IHMuY2F0ZWdvcmllcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2F0ZWdvcmllc0lkcygpIHtcbiAgcmV0dXJuIGNvbXBvc2UoQ2F0ZWdvcmllcy5nZXRJZHMoKSwgZ2V0Q2F0ZWdvcmllcygpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRDYXRlZ29yaWVzU2VsZWN0ZWRJZCgpIHtcbiAgcmV0dXJuIGNvbXBvc2UoQ2F0ZWdvcmllcy5nZXRTZWxlY3RlZElkKCksIGdldENhdGVnb3JpZXMoKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2F0ZWdvcmllc1NlbGVjdGVkRGF0ZSgpIHtcbiAgcmV0dXJuIGNvbXBvc2UoQ2F0ZWdvcmllcy5nZXRTZWxlY3RlZERhdGUoKSwgZ2V0Q2F0ZWdvcmllcygpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRDYXRlZ29yaWVzRGF0YVJhdygpIHtcbiAgcmV0dXJuIChzdGF0ZSQ6IFM8QXBwU3RhdGU+KSA9PiBzdGF0ZSQuc2VsZWN0KHMgPT4gcy5jYXRlZ29yaWVzLmRhdGEpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldENhdGVnb3JpZXNEYXRhKCkge1xuICByZXR1cm4gKHN0YXRlJDogUzxBcHBTdGF0ZT4pID0+IHN0YXRlJFxuICAgIC5sZXQoZ2V0Q2F0ZWdvcmllc0lkcygpKVxuICAgIC5zd2l0Y2hNYXAoaWRzID0+IHN0YXRlJC5sZXQoY29tcG9zZShDYXRlZ29yaWVzLmdldERhdGEoaWRzKSwgZ2V0Q2F0ZWdvcmllcygpKSkpO1xufVxuIl19